<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Blog - posts</title><link href="https://cropse.github.io/cropse_site/" rel="alternate"></link><link href="https://cropse.github.io/cropse_site/feeds/posts.atom.xml" rel="self"></link><id>https://cropse.github.io/cropse_site/</id><updated>2017-04-05T15:30:18+08:00</updated><entry><title>FreeNas 安裝紀錄</title><link href="https://cropse.github.io/cropse_site/FreeNas-.html" rel="alternate"></link><published>2017-04-05T15:30:18+08:00</published><updated>2017-04-05T15:30:18+08:00</updated><author><name>Cropse</name></author><id>tag:cropse.github.io,2017-04-05:/cropse_site/FreeNas-.html</id><summary type="html"></summary><content type="html">&lt;p&gt;這裡整理用FreeNas的一些心得&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;?&lt;/code&gt;跟&lt;code&gt;help&lt;/code&gt;來查詢可用的指令，像是選單的方式&lt;br&gt;
所以如果要直接回到主選單直接敲&lt;code&gt;\&lt;/code&gt;就好，剩下基本上跟GUI操作會差不多&lt;br&gt;
EX: &lt;code&gt;network interface bridge2 delete&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;敲&lt;code&gt;shell&lt;/code&gt;直接進sh，在shell敲&lt;code&gt;cli&lt;/code&gt;回到FreeNas CLI，細節參考以下連結&lt;br&gt;
shell裡面使用cli:&lt;br&gt;
&lt;code&gt;cli -e "network interface show"&lt;/code&gt;&lt;br&gt;
同理在cli使用shell:&lt;br&gt;
&lt;code&gt;shell "ls -al"&lt;/code&gt;&lt;br&gt;
&lt;a href="http://www.freenas.org/blog/freenas-cli-preview/"&gt;FreeNas CLI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://doc.freenas.org/9.3/freenas_cli.html#megacli"&gt;FreeNas utilties&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有裝LSI的卡可以在shell裡面用&lt;code&gt;MegaCli&lt;/code&gt;指令，不過MSM這類的功能可能要自己刻，因為想要做一個硬碟有問題就寄信跟IFTTT通知我手機的功能，對FreeBSD跟MegaCli還不是太熟，所以有時間在嘗試看看&lt;/p&gt;
&lt;p&gt;目前測試docker用GUI都還有點問題，等穩定一點在整理目前用的服務&lt;/p&gt;</content><category term="funny"></category></entry><entry><title>設定nginx proxy tls/ssl server</title><link href="https://cropse.github.io/cropse_site/%E8%A8%AD%E5%AE%9Anginx-proxy-tlsssl-server-.html" rel="alternate"></link><published>2017-03-30T11:13:12+08:00</published><updated>2017-03-30T11:13:12+08:00</updated><author><name>Cropse</name></author><id>tag:cropse.github.io,2017-03-30:/cropse_site/設定nginx-proxy-tlsssl-server-.html</id><summary type="html"></summary><content type="html">&lt;p&gt;http在資料傳遞過程中沒有進行加密的動作，所以有中間人擷取到敏感資料的問題，&lt;a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB"&gt;中間人攻擊&lt;/a&gt;（Man-in-the-middle attack，縮寫：MITM），所以需要SSL跟TLS做加密的動作&lt;br&gt;
80是一般http通用接口，443是https的接口，所以其實只要在443port上加入ssl憑證就可以了&lt;br&gt;
Ref:&lt;a href="https://blog.gtwang.org/linux/nginx-create-and-install-ssl-certificate-on-ubuntu-linux/"&gt;NGINX 設定 HTTPS 網頁加密連線，建立自行簽署的 SSL 憑證&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用openssl產生ssl憑證&lt;br&gt;
&lt;code&gt;sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;req：使用 X.509 Certificate Signing Request（CSR） Management 產生憑證。&lt;/li&gt;
&lt;li&gt;-x509：建立自行簽署的憑證。&lt;/li&gt;
&lt;li&gt;-nodes：不要使用密碼保護，因為這個憑證是 NGINX 伺服器要使用的，如果設定密碼的話，會讓伺服器每次在啟動時書需要輸入密碼。&lt;/li&gt;
&lt;li&gt;-days 365：設定憑證的使用期限，單位是天，如果不想時常重新產生憑證，可以設長一點。&lt;/li&gt;
&lt;li&gt;-newkey rsa:2048：同時產生新的 RSA 2048 位元的金鑰。&lt;/li&gt;
&lt;li&gt;-keyout：設定金鑰儲存的位置。&lt;/li&gt;
&lt;li&gt;-out：設定憑證儲存的位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;依照順序填：&lt;br&gt;
1. 國家代碼，台灣就填 TW。&lt;br&gt;
2. 州或省，台灣就填 Taiwan。&lt;br&gt;
3. 城市，例如台北就填 Taipei。&lt;br&gt;
4. 公司名稱。&lt;br&gt;
5. 部門名稱。&lt;br&gt;
6. 伺服器的 FQDN，這個一定要填寫正確，如果沒有申請網域名稱的話，也可以用 IP 位址替代。&lt;br&gt;
7. E-mail 信箱。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server {
  # 加入 SSL 設定
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  # 憑證與金鑰的路徑
  ssl_certificate /etc/nginx/ssl/nginx.crt;
  ssl_certificate_key /etc/nginx/ssl/nginx.key;

  # .....
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是有使用者從http連進來，所以需要從80轉到443，&lt;code&gt;permanent&lt;/code&gt;是http 301，讓瀏覽器重新訪問&lt;br&gt;
- permanent(301):永久性重新定向，對搜尋引擎友好&lt;br&gt;
- redirect(302):臨時性重新定向&lt;br&gt;
- last：将rewrite后的地址重新在server标签执行。&lt;br&gt;
- break：将rewrite后地址重新在当前的location标签执行。&lt;br&gt;
&lt;a href="http://www.netingcn.com/nginx-rewrite-flag.html"&gt;关于nginx rewrtie的四种flag&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt; &lt;span class="err"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;listen&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;導向至&lt;/span&gt; &lt;span class="err"&gt;HTTPS&lt;/span&gt;
  &lt;span class="err"&gt;rewrite&lt;/span&gt; &lt;span class="err"&gt;^(.*)&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;permanent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是ssl不會有憑證，需要跟發放憑證的供應商買，所以有&lt;strong&gt;Let's Encrypt&lt;/strong&gt;這家免費提供ssl的公司，&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.peterdavehello.org/2015/10/build-an-a-plus-best-practice-https-web-server-via-nginx-chinese-version/"&gt;用 nginx 建置一個 A+ 等級的 https 網頁伺服器&lt;/a&gt;&lt;/p&gt;</content><category term="nginx"></category><category term="deploy"></category></entry></feed>